export default class WidgetCommonPropertiesEditor{constructor(t){if(!t)throw new Error("WidgetCommonPropertiesEditor options is required");if(!t.dialogContainer)throw new Error("WidgetCommonPropertiesEditor options.dialogContainer is required");var e;if("string"==typeof t.dialogContainer)e=document.getElementById(t.dialogContainer);else{if(!(t.dialogContainer instanceof HTMLElement))throw new Error("WidgetCommonPropertiesEditor options.dialogContainer must be a string or HTMLElement");e=t.dialogContainer}var n=this;this._dialogContainer=e,t.callbacks||(t.callbacks={}),this._callbacks=t.callbacks,this.txtLabel=document.getElementById("txtWidgetPropLabel"),this.txtLabel&&this._callbacks.onLabelChanged&&(this.txtLabel.addEventListener("change",(function(){n._callbacks.onLabelChanged(n,n.txtLabel.value)})),this.txtLabel.addEventListener("input",(function(){n._callbacks.onLabelChanged(n,n.txtLabel.value)}))),this.txtFontSize=document.getElementById("txtWidgetFontSize"),this.txtFontSize&&this._callbacks.onFontSizeChanged&&this.txtFontSize.addEventListener("change",(function(){var t=parseInt(n.txtFontSize.value,10);n._callbacks.onFontSizeChanged(n,t)})),this.optFontWeights=this._dialogContainer.querySelectorAll('input[name="fontWeight"]'),this.optFontWeights&&this._callbacks.onFontWeightChanged&&this.optFontWeights.forEach((function(t){t.addEventListener("change",(function(){n._callbacks.onFontWeightChanged(n,this.value)}))})),this.chkFontUnderline=document.getElementById("chkWidgetPropFontUnderline"),this.chkFontUnderline&&this.chkFontUnderline.addEventListener("change",(function(){n._updateControls(),n._callbacks.onFontUnderlineChanged&&n._callbacks.onFontUnderlineChanged(n,n.chkFontUnderline.checked)})),this.txtColumns=document.getElementById("txtWidgetPropColumns"),this.txtColumns&&this._callbacks.onColumnsChanged&&this.txtColumns.addEventListener("change",(function(){var t=parseInt(n.txtColumns.value,10);n._callbacks.onColumnsChanged(n,t)})),this.chkAutoHeight=document.getElementById("chkWidgetPropAutoHeight"),this.chkAutoHeight&&this.chkAutoHeight.addEventListener("change",(function(){n._updateControls(),n._callbacks.onAutoHeightChanged&&n._callbacks.onAutoHeightChanged(n,n.chkAutoHeight.checked)})),this.txtHeight=document.getElementById("txtWidgetPropHeight"),this.txtHeight&&this._callbacks.onHeightChanged&&this.txtHeight.addEventListener("change",(function(){if(!n.chkAutoHeight.checked){var t=parseInt(n.txtHeight.value,10);n._callbacks.onHeightChanged(n,t)}})),this.chkRequired=document.getElementById("chkWidgetPropRequired"),this.chkRequired&&this._callbacks.onRequiredChanged&&this.chkRequired.addEventListener("change",(function(){n._callbacks.onRequiredChanged(n,n.chkRequired.checked)})),this.optHAlignments=this._dialogContainer.querySelectorAll('input[name="halignment"]'),this.optHAlignments&&this._callbacks.onHorizontalAlignmentChanged&&this.optHAlignments.forEach((function(t){t.addEventListener("change",(function(){n._callbacks.onHorizontalAlignmentChanged(n,this.value)}))})),this.optVAlignments=this._dialogContainer.querySelectorAll('input[name="valignment"]'),this.optVAlignments&&this._callbacks.onVerticalAlignmentChanged&&this.optVAlignments.forEach((function(t){t.addEventListener("change",(function(){n._callbacks.onVerticalAlignmentChanged(n,this.value)}))})),this.txtTip=document.getElementById("txtWidgetPropTip"),this.txtTip&&this._callbacks.onTipChanged&&(this.txtTip.addEventListener("change",(function(){n._callbacks.onTipChanged(n,n.txtTip.value)})),this.txtTip.addEventListener("input",(function(){n._callbacks.onTipChanged(n,n.txtTip.value)})))}init(){var t=this._dialogContainer.querySelector("input,select");t&&(t.focus(),"function"==typeof t.select&&t.select())}_updateControls(){document.getElementById("txtWidgetPropHeight").disabled=this.chkAutoHeight.checked}}